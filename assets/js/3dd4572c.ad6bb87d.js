"use strict";(self.webpackChunkctrader_openapi_docs=self.webpackChunkctrader_openapi_docs||[]).push([[3287],{5537:(e,n,t)=>{t.d(n,{A:()=>y});var o=t(6540),s=t(4164),a=t(5627),i=t(6347),r=t(372),c=t(604),l=t(1861),u=t(8749);function d(e){return o.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,o.useMemo)(()=>{const e=n??function(e){return d(e).map(({props:{value:e,label:n,attributes:t,default:o}})=>({value:e,label:n,attributes:t,default:o}))}(t);return function(e){const n=(0,l.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,t])}function p({value:e,tabValues:n}){return n.some(n=>n.value===e)}function m({queryString:e=!1,groupId:n}){const t=(0,i.W6)(),s=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,c.aZ)(s),(0,o.useCallback)(e=>{if(!s)return;const n=new URLSearchParams(t.location.search);n.set(s,e),t.replace({...t.location,search:n.toString()})},[s,t])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,a=h(e),[i,c]=(0,o.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find(e=>e.default)??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:a})),[l,d]=m({queryString:t,groupId:s}),[f,b]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,s]=(0,u.Dv)(n);return[t,(0,o.useCallback)(e=>{n&&s.set(e)},[n,s])]}({groupId:s}),g=(()=>{const e=l??f;return p({value:e,tabValues:a})?e:null})();(0,r.A)(()=>{g&&c(g)},[g]);return{selectedValue:i,selectValue:(0,o.useCallback)(e=>{if(!p({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);c(e),d(e),b(e)},[d,b,a]),tabValues:a}}var b=t(9136);const g={tabList:"tabList_DPCi",tabItem:"tabItem_JN0M"};var v=t(4848);function w({className:e,block:n,selectedValue:t,selectValue:o,tabValues:i}){const r=[],{blockElementScrollPositionUntilNextRender:c}=(0,a.a_)(),l=e=>{const n=e.currentTarget,s=r.indexOf(n),a=i[s].value;a!==t&&(c(n),o(a))},u=e=>{let n=null;switch(e.key){case"Enter":l(e);break;case"ArrowRight":{const t=r.indexOf(e.currentTarget)+1;n=r[t]??r[0];break}case"ArrowLeft":{const t=r.indexOf(e.currentTarget)-1;n=r[t]??r[r.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},e),children:i.map(({value:e,label:n,attributes:o})=>(0,v.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{r.push(e)},onKeyDown:u,onClick:l,...o,className:(0,s.A)("tabs__item",g.tabItem,o?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function x({lazy:e,children:n,selectedValue:t}){const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=a.find(e=>e.props.value===t);return e?(0,o.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:a.map((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function j(e){const n=f(e);return(0,v.jsxs)("div",{className:(0,s.A)("tabs-container",g.tabList),children:[(0,v.jsx)(w,{...n,...e}),(0,v.jsx)(x,{...n,...e})]})}function y(e){const n=(0,b.A)();return(0,v.jsx)(j,{...e,children:d(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var o=t(6540);const s={},a=o.createContext(s);function i(e){const n=o.useContext(a);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(a.Provider,{value:n},e.children)}},9220:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>p,frontMatter:()=>c,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"contacting-api/establishing-connection","title":"Establishing a Connection","description":"In order to contact the API server, we need to open a socket connection to an","source":"@site/docs/02-contacting-api/02-establishing-connection.mdx","sourceDirName":"02-contacting-api","slug":"/contacting-api/establishing-connection","permalink":"/ctoa/contacting-api/establishing-connection","draft":false,"unlisted":false,"editUrl":"https://github.com/m-ahmadi/ctoa/blob/main/docs/02-contacting-api/02-establishing-connection.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"sidebar","previous":{"title":"API Endpoints","permalink":"/ctoa/contacting-api/endpoints"},"next":{"title":"Exchanging Messages","permalink":"/ctoa/contacting-api/exchanging-messages"}}');var s=t(4848),a=t(8453),i=t(5537),r=t(9329);const c={},l="Establishing a Connection",u={},d=[{value:"Why Connection Closes Automatically",id:"why-connection-closes-automatically",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"establishing-a-connection",children:"Establishing a Connection"})}),"\n",(0,s.jsxs)(n.p,{children:["In order to contact the API server, we need to open a socket connection to an\n",(0,s.jsx)(n.a,{href:"./endpoints",children:"endpoint"}),"."]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["We are using the ",(0,s.jsx)(n.a,{href:"./endpoints#an-example",children:"endpoint"})," deisgnated for live accounts\nand JSON messaging."]})}),"\n",(0,s.jsxs)(i.A,{children:[(0,s.jsx)(r.A,{value:"JavaScript",label:"JavaScript",default:!0,children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const ws = new WebSocket('wss://live.ctraderapi.com:5036');\n\nws.onopen = function () {\n  console.log('connected to server');\n};\n\nws.onclose = function () {\n  console.log('connection closed');\n};\n"})})}),(0,s.jsxs)(r.A,{value:"Python",children:[(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["Install the ",(0,s.jsx)(n.code,{children:"websockets"})," package with ",(0,s.jsx)(n.code,{children:"pip install websockets"}),"."]})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import asyncio as aio\nimport websockets\nfrom websockets.asyncio.client import connect\n\nasync def main():\n  async with connect('wss://echo.websocket.org') as ws:\n    print('connected to server')\n\n    while True:\n      await aio.sleep(0) # neccessary in \"async infinite loops\"\n\n      if ws.state != websockets.State.OPEN:\n        print('connection closed')\n        break\n\naio.run(main())\n"})})]})]}),"\n",(0,s.jsx)(n.h2,{id:"why-connection-closes-automatically",children:"Why Connection Closes Automatically"}),"\n",(0,s.jsx)(n.p,{children:"If you ran previous code examples, you'll notice that the script runs\nsucessfully and prints the following:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"connected to server\nconnection closed\n"})}),"\n",(0,s.jsx)(n.p,{children:"So it seems that the connection is opened at first, but then after some time\npasses, it gets closed automatically."}),"\n",(0,s.jsx)(n.p,{children:"Let's adjust the code to measure the time between the events happening. We want\nto measure the time taken between following events:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"from when script is first run, until connection is opened"}),"\n",(0,s.jsx)(n.li,{children:"from when connection is opened, until it's closed"}),"\n"]}),"\n",(0,s.jsxs)(i.A,{children:[(0,s.jsx)(r.A,{value:"JavaScript",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const ws = new WebSocket('wss://live.ctraderapi.com:5036');\nconst round = (n, dp) => +n.toFixed(dp);\n\nlet t = Date.now();\n\nws.onopen = function () {\n  console.log('connected to server');\n  console.log(\n    'it took',\n    round((Date.now() - t) / 1000, 1),\n    'secs to open the connection',\n  );\n  t = Date.now();\n};\n\nws.onclose = function () {\n  console.log('connection closed');\n  const secsPassed = round((Date.now() - t) / 1000, 1);\n  console.log(\n    'connection stayed open for',\n    secsPassed,\n    'seconds before it was closed',\n  );\n};\n"})})}),(0,s.jsx)(r.A,{value:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import asyncio as aio\nimport websockets\nfrom websockets.asyncio.client import connect\nfrom timeit import default_timer as timer\n\nasync def main():\n  t = timer()\n\n  async with connect('wss://live.ctraderapi.com:5036') as ws:\n    print('connected to server')\n\n    secs_passed = round(timer() - t, 1)\n    print('it took', secs_passed, 'seconds to open the connection')\n    t = timer()\n\n    while True:\n      await aio.sleep(0)\n\n      if ws.state != websockets.State.OPEN:\n        print('connection closed')\n        secs_passed = round(timer() - t, 1)\n        print('connection stayed open for', secs_passed,\n          'seconds before it was closed')\n        break\n\naio.run(main())\n"})})})]}),"\n",(0,s.jsx)(n.p,{children:"Results from running the code:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"connected to server\nit took 0.8 seconds to open the connection\nconnection closed\nconnection stayed open for 29.8 seconds before it was closed\n"})}),"\n",(0,s.jsx)(n.p,{children:"As the results show, the connection gets closed after being open for 30 seconds.\nIt is actually the server that closes the connection."}),"\n",(0,s.jsxs)(n.p,{children:["When the server notices that a client that previously has opened a connection to\nit, hasn't been sending any messages for awhile, it decides to close the\nconnection to that client. The time a client spends being connected to the\nserver, but not sending any messages to it, is also called the ",(0,s.jsx)(n.strong,{children:"idle time"}),".\nOne of the reasons for this server's behaviour is to save its resources."]}),"\n",(0,s.jsxs)(n.p,{children:["Later, when we learn about ",(0,s.jsx)(n.a,{href:"./exchanging-messages",children:"Exchanging Messages"})," with the\nserver, we will see how the server counts the ",(0,s.jsx)(n.strong,{children:"idle time"})," of a connected\nclient from the last message that the client sent to it."]}),"\n",(0,s.jsxs)(n.p,{children:["We will also learn a special way of preventing this from happening in\n",(0,s.jsx)(n.a,{href:"./keeping-connection-open",children:"Keeping Connection Open"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},9329:(e,n,t)=>{t.d(n,{A:()=>i});t(6540);var o=t(4164);const s={tabItem:"tabItem_YjCn"};var a=t(4848);function i({children:e,hidden:n,className:t}){return(0,a.jsx)("div",{role:"tabpanel",className:(0,o.A)(s.tabItem,t),hidden:n,children:e})}}}]);