"use strict";(self.webpackChunkctrader_openapi_docs=self.webpackChunkctrader_openapi_docs||[]).push([[19],{8030:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"Extracting all the information regarding trade history","title":"Extracting all the information regarding trade history","description":"I will describe the sequence of client-server messages that relate to extracting","source":"@site/docs/13-Extracting all the information regarding trade history.mdx","sourceDirName":".","slug":"/Extracting all the information regarding trade history","permalink":"/ctoa/Extracting all the information regarding trade history","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":13,"frontMatter":{},"sidebar":"sidebar","previous":{"title":"How far back time-series data, you can download","permalink":"/ctoa/How far back time-series data, you can download"},"next":{"title":"JavaScript example of how to connect to server and place an order","permalink":"/ctoa/JavaScript example of how to connect to server and place an order"}}');var o=t(4848),a=t(8453);const i={},s=void 0,c={},d=[];function l(e){const r={code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.p,{children:"I will describe the sequence of client-server messages that relate to extracting\r\nall the information regarding deal history"}),"\n",(0,o.jsxs)(r.p,{children:["you send ",(0,o.jsx)(r.code,{children:"ProtoOADealListReq"})," server sends ",(0,o.jsx)(r.code,{children:"ProtoOADealListRes"})," back which\r\ncontains a deal field which is an array of ",(0,o.jsx)(r.code,{children:"ProtoOADeal"}),", each item in the array\r\ncontains an ",(0,o.jsx)(r.code,{children:"orderId"}),", a ",(0,o.jsx)(r.code,{children:"positionId"})," and a ",(0,o.jsx)(r.code,{children:"dealId"})]}),"\n",(0,o.jsxs)(r.p,{children:["now you must iterate through the deal field and send a ",(0,o.jsx)(r.code,{children:"ProtoOAOrderDetailsReq"}),"\r\nmessage for each item"]}),"\n",(0,o.jsxs)(r.p,{children:["in response to each ",(0,o.jsx)(r.code,{children:"ProtoOAOrderDetailsReq"})," server sends back a\r\n",(0,o.jsx)(r.code,{children:"ProtoOAOrderDetailsRes"})," which contains two fields. one is a ",(0,o.jsx)(r.code,{children:"deal"})," field which\r\nis just the same as an item of ",(0,o.jsx)(r.code,{children:"deal"})," field of the ",(0,o.jsx)(r.code,{children:"ProtoOADealListRes"}),". another\r\nfield is ",(0,o.jsx)(r.code,{children:"order"})," which contains more information about details of the order"]}),"\n",(0,o.jsx)(r.p,{children:"this is all the info available about the past deals, so in summary the related\r\nmessages you need to study are:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{children:"ProtoOADealListReq\r\nProtoOADealListRes\r\n\r\nProtoOAOrderDetailsReq\r\nProtoOAOrderDetailsRes\r\n\r\n# these might also come in handy (if you want current orders and positions)\r\nProtoOAOrderListReq\r\nProtoOAReconcileReq\n"})})]})}function h(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>i,x:()=>s});var n=t(6540);const o={},a=n.createContext(o);function i(e){const r=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),n.createElement(a.Provider,{value:r},e.children)}}}]);