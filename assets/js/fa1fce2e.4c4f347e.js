"use strict";(self.webpackChunkctrader_openapi_docs=self.webpackChunkctrader_openapi_docs||[]).push([[78],{6424:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"examples/Why live trendbar has no closeprice","title":"Why live trendbar has no closeprice","description":"A live trendbar doesn\'t have deltaClose","source":"@site/docs/06-examples/10-Why live trendbar has no closeprice.mdx","sourceDirName":"06-examples","slug":"/examples/Why live trendbar has no closeprice","permalink":"/ctoa/examples/Why live trendbar has no closeprice","draft":false,"unlisted":false,"editUrl":"https://github.com/m-ahmadi/ctoa/blob/main/docs/06-examples/10-Why live trendbar has no closeprice.mdx","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{},"sidebar":"sidebar","previous":{"title":"JavaScript example of how to connect to server and place an order","permalink":"/ctoa/examples/JavaScript example of how to connect to server and place an order"},"next":{"title":"what happened to the order you just sent","permalink":"/ctoa/examples/what happened to the order you just sent"}}');var r=n(4848),o=n(8453);const a={},c=void 0,i={},l=[];function d(e){const t={br:"br",code:"code",hr:"hr",p:"p",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["A live trendbar doesn't have ",(0,r.jsx)(t.code,{children:"deltaClose"}),(0,r.jsx)(t.br,{}),"\n","the close in this case is the current ",(0,r.jsx)(t.code,{children:"bid"})," and ",(0,r.jsx)(t.code,{children:"ask"})]}),"\n",(0,r.jsx)(t.p,{children:"You can think about it like this:"}),"\n",(0,r.jsxs)(t.p,{children:["Because it's a live candle, the ",(0,r.jsx)(t.code,{children:"close"})," keeps changing"]}),"\n",(0,r.jsxs)(t.p,{children:["Once you subscribe to ",(0,r.jsx)(t.code,{children:"SpotEvent"})," (which you obviously did cuz server throws\nerror if you didnt) you get current bid ask values, use those as close"]}),"\n",(0,r.jsxs)(t.p,{children:["in the picture, each row is a server message, so the red box is your ",(0,r.jsx)(t.code,{children:"close"}),"\nprice"]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.p,{children:"trendbar field is 1M candle of last minute without close (only has\nopen,high,low)"}),"\n",(0,r.jsx)(t.p,{children:"bid/ask fields are the last known price and they are the hypothetical/perpetual\nclose for the trendbar candle"}),"\n",(0,r.jsx)(t.p,{children:"a somewhat\ud83d\udc47 similar (but not identical) conversation"})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>c});var s=n(6540);const r={},o=s.createContext(r);function a(e){const t=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);