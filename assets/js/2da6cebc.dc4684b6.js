"use strict";(self.webpackChunkctrader_openapi_docs=self.webpackChunkctrader_openapi_docs||[]).push([[3593],{7014:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"contacting-api/official-packages","title":"Official Packages","description":"Python","source":"@site/docs/03-contacting-api/07-official-packages.mdx","sourceDirName":"03-contacting-api","slug":"/contacting-api/official-packages","permalink":"/ctoa/contacting-api/official-packages","draft":false,"unlisted":false,"editUrl":"https://github.com/m-ahmadi/ctoa/blob/main/docs/03-contacting-api/07-official-packages.mdx","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{},"sidebar":"sidebar","previous":{"title":"Keeping Connection Open","permalink":"/ctoa/contacting-api/keeping-connection-open"},"next":{"title":"Dictionary of All Messages","permalink":"/ctoa/contacting-api/dictionary-of-all-messages"}}');var r=t(4848),a=t(8453);const o={},s="Official Packages",c={},d=[{value:"Python",id:"python",level:2},{value:"Usage Code Example",id:"usage-code-example",level:3},{value:"Correct Name of PyPi Package",id:"correct-name-of-pypi-package",level:3},{value:"C#",id:"c",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"official-packages",children:"Official Packages"})}),"\n",(0,r.jsx)(n.h2,{id:"python",children:"Python"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Page"}),(0,r.jsx)(n.th,{children:"URL"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"PyPi"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://pypi.org/project/ctrader_open_api/",children:"https://pypi.org/project/ctrader_open_api/"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Github"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://github.com/spotware/OpenApiPy",children:"https://github.com/spotware/OpenApiPy"})})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["The official Python package uses a library for networking called\n",(0,r.jsx)(n.a,{href:"https://twisted.org/",children:"Twisted"})," under the hood. Altough Twisted is a very old\nlibrary and there are far better alternatives, you can still get a lot done with\nit."]}),"\n",(0,r.jsx)(n.h3,{id:"usage-code-example",children:"Usage Code Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-py",children:"from ctrader_open_api import Client, Protobuf, TcpProtocol, EndPoints\nimport ctrader_open_api.messages.OpenApiMessages_pb2 as OA\nimport ctrader_open_api.messages.OpenApiModelMessages_pb2 as OAModel\nimport ctrader_open_api.messages.OpenApiCommonMessages_pb2 as OACommon\nimport ctrader_open_api.messages.OpenApiCommonModelMessages_pb2 as OAModelCommon\nfrom twisted.internet import reactor\n\nimport json\n\ncredentials = json.load(open('credentials.json'))\nclient = Client(EndPoints.PROTOBUF_LIVE_HOST, EndPoints.PROTOBUF_PORT,\n                TcpProtocol)\n\ndef main():\n  print('ready to do something')\n  reactor.stop()\n\ndef onAccAuth(message):\n  print('account authenticated')\n  main()\n\ndef onAppAuth(message):\n  print('app authenticated')\n  req = OA.ProtoOAAccountAuthReq()\n  req.ctidTraderAccountId = credentials['accountId']\n  req.accessToken = credentials['accessToken']\n  deferred = client.send(req)\n  deferred.addCallbacks(onAccAuth, onError)\n\ndef onError(failure):\n  print('err: ', repr(failure.value))\n\ndef connected(client):\n  print('connected')\n  req = OA.ProtoOAApplicationAuthReq()\n  req.clientId = credentials['clientId']\n  req.clientSecret = credentials['clientSecret']\n  deferred = client.send(req)\n  deferred.addCallbacks(onAppAuth, onError)\n\ndef disconnected(client, reason):\n  print('disconnected: ', reason)\n\ndef onMsg(client, message):\n  ignores = [i.payloadType for i in [OACommon.ProtoHeartbeatEvent(),\n\t                                   OA.ProtoOAAccountAuthRes(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t OA.ProtoOAApplicationAuthRes()]]\n  if message.payloadType in ignores:\n    return\n  print('message received')\n\nclient.setConnectedCallback(connected)\nclient.setDisconnectedCallback(disconnected)\nclient.setMessageReceivedCallback(onMsg)\nclient.startService()\nreactor.run()\n\n"})}),"\n",(0,r.jsx)(n.h3,{id:"correct-name-of-pypi-package",children:"Correct Name of PyPi Package"}),"\n",(0,r.jsxs)(n.p,{children:["The name of the package is actually ",(0,r.jsx)(n.code,{children:"ctrader_open_api"})," (separated by underline),\nbut even if you use the name ",(0,r.jsx)(n.code,{children:"ctrader-open-api"})," (separated by dash) to install\nit, it would still work. The reason for this is because the dash characters get\nautomatically converted to underlines in the process. Since this could be a\nsource of confusion, it's worth covering it here."]}),"\n",(0,r.jsxs)(n.p,{children:["Let's create an isolated environment and get a report of what packages would be\ninstalled after running a ",(0,r.jsx)(n.code,{children:"pip install"})," command (",(0,r.jsx)(n.code,{children:"--report"})," option), but without\nactually installing anything (",(0,r.jsx)(n.code,{children:"--dry-run"})," option), and then compare the two\nreports. So we install both a package named ",(0,r.jsx)(n.code,{children:"ctrader_open_api"}),", and another\nnamed ",(0,r.jsx)(n.code,{children:"ctrader-open-api"}),", and will store the report into files."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"mkdir test && cd test\npython -m venv .env\n.env\\Scripts\\activate\npip install ctrader_open_api --dry-run -I --report f1.json\npip install ctrader-open-api --dry-run -I --report f2.json\n"})}),"\n",(0,r.jsx)(n.p,{children:"And the we examine the two report files like below:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-py",children:"import json\n\ndef print_installed_pkgs(report_file)\n  o = json.load(open(report_file, encoding='utf-8-sig'))\n  a = [i['metadata']['name'] +'=='+ i['metadata']['version']\n    for i in o['install']]\n  print('\\n'.join(a))\n\nprint('installed pkgs after `pip install ctrader_open_api`')\nprint_installed_pkgs_from_report_file('f1.json')\nprint('-------------------------')\nprint('installed pkgs after `pip install ctrader-open-api`')\nprint_installed_pkgs_from_report_file('f2.json')\n"})}),"\n",(0,r.jsx)(n.p,{children:"As you can see below, both will install the same exact things."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"installed pkgs after `pip install ctrader_open_api`\nctrader_open_api==0.9.2\ninputimeout==1.0.4\nprotobuf==3.20.1\n...\n-------------------------\ninstalled pkgs after `pip install ctrader-open-api`\nctrader_open_api==0.9.2\ninputimeout==1.0.4\nprotobuf==3.20.1\n...\n"})}),"\n",(0,r.jsx)(n.h2,{id:"c",children:"C#"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Page"}),(0,r.jsx)(n.th,{children:"Link"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"GitHub"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://github.com/spotware/OpenAPI.Net",children:"https://github.com/spotware/OpenAPI.Net"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Official Docs"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://help.ctrader.com/open-api/net_SDK/net-sdk-index/",children:"https://help.ctrader.com/open-api/net_SDK/net-sdk-index/"})})]})]})]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var i=t(6540);const r={},a=i.createContext(r);function o(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);