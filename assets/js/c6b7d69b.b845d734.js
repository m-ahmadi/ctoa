"use strict";(self.webpackChunkctrader_openapi_docs=self.webpackChunkctrader_openapi_docs||[]).push([[950],{5006:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>l,frontMatter:()=>s,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"Python example of connecting to server and placing an order","title":"Python example of connecting to server and placing an order","description":"","source":"@site/docs/07-Python example of connecting to server and placing an order.mdx","sourceDirName":".","slug":"/Python example of connecting to server and placing an order","permalink":"/ctoa/Python example of connecting to server and placing an order","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":7,"frontMatter":{},"sidebar":"sidebar","previous":{"title":"Basic Python examples of how to connect to server","permalink":"/ctoa/Basic Python examples of how to connect to server"},"next":{"title":"Python example of how to download time-series data","permalink":"/ctoa/Python example of how to download time-series data"}}');var t=r(4848),a=r(8453);const s={},c=void 0,i={},d=[];function p(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"from ctrader_open_api import Client, Protobuf, TcpProtocol, EndPoints\r\nimport ctrader_open_api.messages.OpenApiMessages_pb2 as OA\r\nimport ctrader_open_api.messages.OpenApiModelMessages_pb2 as OAModel\r\nimport ctrader_open_api.messages.OpenApiCommonMessages_pb2 as OACommon\r\nimport ctrader_open_api.messages.OpenApiCommonModelMessages_pb2 as OAModelCommon\r\nfrom twisted.internet import reactor\r\nimport json\r\n\r\ncredentials = json.load(open('credentials.json'))\r\nclient = Client(EndPoints.PROTOBUF_DEMO_HOST, EndPoints.PROTOBUF_PORT, TcpProtocol)\r\nPROTO_OA_ERROR_RES_PAYLOAD_TYPE = OA.ProtoOAErrorRes().payloadType\r\n\r\ndef main():\r\n  req = OA.ProtoOANewOrderReq()\r\n  req.ctidTraderAccountId = credentials['accountId']\r\n  req.orderType = OAModel.ProtoOAOrderType.LIMIT\r\n  req.tradeSide = OAModel.ProtoOATradeSide.BUY\r\n  req.symbolId = 41 # XAUUSD\r\n  req.limitPrice = 2700.34\r\n  req.volume = 100 # equals 0.01 lot\r\n  req.stopLoss = 2600.34\r\n  req.takeProfit = 2750.34\r\n  deferred = client.send(req)\r\n  deferred.addCallbacks(onNewOrderRes, onError)\r\n\r\ndef onNewOrderRes(message):\r\n  if message.payloadType != OA.ProtoOAExecutionEvent().payloadType:\r\n    print('order not placed')\r\n    return\r\n  response = Protobuf.extract(message)\r\n  print('order successfully placed');\r\n  print('order id:', response.order.orderId)\r\n\r\ndef onAccAuth(message):\r\n  if message.payloadType == PROTO_OA_ERROR_RES_PAYLOAD_TYPE:\r\n    print('account authentication failed', '\\n')\r\n    print(Protobuf.extract(message), '\\n')\r\n    return\r\n  print('account authenticated')\r\n  main()\r\n\r\ndef onAppAuth(message):\r\n  if message.payloadType == PROTO_OA_ERROR_RES_PAYLOAD_TYPE:\r\n    print('app authentication failed', '\\n')\r\n    print(Protobuf.extract(message), '\\n')\r\n    return\r\n  print('app authenticated')\r\n  req = OA.ProtoOAAccountAuthReq()\r\n  req.ctidTraderAccountId = credentials['accountId']\r\n  req.accessToken = credentials['accessToken']\r\n  deferred = client.send(req)\r\n  deferred.addCallbacks(onAccAuth, onError)\r\n\r\ndef onError(failure):\r\n  print('err: ', repr(failure.value))\r\n\r\ndef connected(client):\r\n  print('connected')\r\n  req = OA.ProtoOAApplicationAuthReq()\r\n  req.clientId = credentials['clientId']\r\n  req.clientSecret = credentials['clientSecret']\r\n  deferred = client.send(req, responseTimeoutInSeconds=20) # err if no response under 20 secs\r\n  deferred.addCallbacks(onAppAuth, onError)\r\n\r\ndef disconnected(client, reason):\r\n  print('disconnected: ', reason)\r\n\r\ndef onMsg(client, message):\r\n  ignores = [i.payloadType for i in [OACommon.ProtoHeartbeatEvent(), OA.ProtoOAAccountAuthRes(), OA.ProtoOAApplicationAuthRes()]]\r\n  if message.payloadType in ignores:\r\n    return\r\n  print('message received')\r\n\r\nclient.setConnectedCallback(connected)\r\nclient.setDisconnectedCallback(disconnected)\r\nclient.setMessageReceivedCallback(onMsg)\r\nclient.startService()\r\nreactor.run()\r\n\n"})})}function l(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>c});var o=r(6540);const t={},a=o.createContext(t);function s(e){const n=o.useContext(a);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);