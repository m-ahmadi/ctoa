"use strict";(self.webpackChunkctrader_openapi_docs=self.webpackChunkctrader_openapi_docs||[]).push([[9968],{7567:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"JavaScript example of how to connect to server and place an order","title":"JavaScript example of how to connect to server and place an order","description":"How to setup environment","source":"@site/docs/14-JavaScript example of how to connect to server and place an order.mdx","sourceDirName":".","slug":"/JavaScript example of how to connect to server and place an order","permalink":"/ctoa/JavaScript example of how to connect to server and place an order","draft":false,"unlisted":false,"editUrl":"https://github.com/m-ahmadi/ctoa/blob/main/docs/14-JavaScript example of how to connect to server and place an order.mdx","tags":[],"version":"current","sidebarPosition":14,"frontMatter":{},"sidebar":"sidebar","previous":{"title":"Extracting all the information regarding trade history","permalink":"/ctoa/Extracting all the information regarding trade history"},"next":{"title":"Why live trendbar has no closeprice","permalink":"/ctoa/Why live trendbar has no closeprice"}}');var a=o(4848),s=o(8453);const r={},i=void 0,c={},l=[{value:"How to setup environment",id:"how-to-setup-environment",level:2}];function d(e){const n={code:"code",h2:"h2",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"var credentials = require('./credentials.json');\nvar payloadTypes = require('./payloadTypes.json');\nvar OAModel = require('./OAModel.json');\nvar fs = require('fs');\nPROTO_HEARTBEAT_EVENT_PAYLOADTYPE = 51;\nuid = (\n  (i) => () =>\n    'cm_id_' + i++\n)(1);\n\n// put two frequently needed credentials into variables\nvar { accountId: ctidTraderAccountId, accessToken } = credentials;\n\n// initialize websocket\nvar ws = new WebSocket('wss://live.ctraderapi.com:5036'); // or 'demo.ctraderapi.com:5036'\n\n// main function which is called after successful authentication\nfunction main() {\n  console.log('ready to do something');\n\n  // request symbols list\n  var clientMsg = {\n    clientMsgId: uid(),\n    payloadType: payloadTypes.PROTO_OA_SYMBOLS_LIST_REQ,\n    payload: {\n      ctidTraderAccountId,\n      accessToken,\n      includeArchivedSymbols: false,\n    },\n  };\n  ws.send(JSON.stringify(clientMsg));\n\n  // place order\n  var clientMsg = {\n    clientMsgId: uid(),\n    payloadType: payloadTypes.PROTO_OA_NEW_ORDER_REQ,\n    payload: {\n      ctidTraderAccountId,\n      accessToken,\n      orderType: OAModel.ProtoOAOrderType.LIMIT,\n      tradeSide: OAModel.ProtoOATradeSide.BUY,\n      symbolId: 41, // XAUUSD\n      limitPrice: 2700.34,\n      volume: 100, // equals 0.01 lot\n      stopLoss: 2600.34,\n      takeProfit: 2750.34,\n    },\n  };\n  ws.send(JSON.stringify(clientMsg));\n}\n\n// main callback\nfunction onResp(message) {\n  var { payloadType, payload } = message;\n\n  if (payloadType === payloadTypes.PROTO_OA_SYMBOLS_LIST_RES) {\n    var syms = payload.symbol;\n    fs.writeFileSync('syms.json', JSON.stringify(syms, null, 2));\n    console.log('got the symbol list and saved it as syms.json');\n  }\n\n  if (payloadType === payloadTypes.PROTO_OA_EXECUTION_EVENT) {\n    console.log('placed order successfully');\n    console.log('order id:', payload.order.orderId);\n  }\n}\n\n// setting up event listeners for the WebSocket instance\n\nws.onopen = function (e) {\n  console.log('connected');\n\n  // first thing after connecting is to request for app auth\n  var clientMsg = {\n    clientMsgId: uid(),\n    payloadType: payloadTypes.PROTO_OA_APPLICATION_AUTH_REQ,\n    payload: {\n      clientId: credentials.clientId,\n      clientSecret: credentials.clientSecret,\n    },\n  };\n  ws.send(JSON.stringify(clientMsg));\n};\n\nws.onmessage = function (e) {\n  var serverMsg = JSON.parse(e.data);\n  var { payloadType } = serverMsg;\n\n  // apply custom logic on special server messages (i.e. auth results, errors, heartbeat events)\n\n  if (payloadType === payloadTypes.PROTO_OA_APPLICATION_AUTH_RES) {\n    console.log('app auth done');\n    // now must request for account auth\n    var clientMsg = {\n      clientMsgId: uid(),\n      payloadType: payloadTypes.PROTO_OA_ACCOUNT_AUTH_REQ,\n      payload: { ctidTraderAccountId, accessToken },\n    };\n    ws.send(JSON.stringify(clientMsg));\n    return;\n  }\n\n  if (payloadType === payloadTypes.PROTO_OA_ACCOUNT_AUTH_RES) {\n    console.log('account auth done');\n    // now everything is ready to do something\n    main();\n    return;\n  }\n\n  if (payloadType === payloadTypes.PROTO_OA_ERROR_RES) {\n    console.log('server sent error message', serverMsg.payload);\n    return;\n  }\n\n  if (payloadType === PROTO_HEARTBEAT_EVENT_PAYLOADTYPE) {\n    console.log('heartbeat event');\n    return;\n  }\n\n  // direct any other server messages to some other function\n  onResp(serverMsg);\n};\n\nws.onerror = function (e) {\n  console.log('websocket error', e);\n};\n\nws.onclose = function (e) {\n  console.log('disconnected', e.code, e.reason, e.wasClean);\n};\n"})}),"\n",(0,a.jsx)(n.h2,{id:"how-to-setup-environment",children:"How to setup environment"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"import ctrader_open_api.messages.OpenApiModelMessages_pb2 as OAModel\nimport json\n\n# get payloadTypes\ntarget_keys = filter(lambda i: i.startswith('PROTO_OA_'), dir(OAModel))\nout = dict(map(lambda k: [k, getattr(OAModel, k)], target_keys))\nwith open('payloadTypes.json', 'w', encoding='utf-8') as f:\n  json.dump(out, f, ensure_ascii=False, indent=2)\n\n# get OAModel stuff\ntarget_keys = filter(lambda i: i.startswith('ProtoOA'), dir(OAModel))\nones_with_keyval = filter(lambda k: hasattr(getattr(OAModel,k),'keys'), target_keys)\nout = {}\nfor key in ones_with_keyval:\n  prop = getattr(OAModel, key)\n  out[key] = dict(zip(prop.keys(), prop.values()))\nwith open('OAModel.json', 'w', encoding='utf-8') as f:\n  json.dump(out, f, ensure_ascii=False, indent=2)\n\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>i});var t=o(6540);const a={},s=t.createContext(a);function r(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);