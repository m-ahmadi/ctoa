"use strict";(self.webpackChunkctrader_openapi_docs=self.webpackChunkctrader_openapi_docs||[]).push([[254],{331:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"contacting-api/keeping-connection-open","title":"Keeping Connection Open","description":"As mentioned earlier, connection does not stay open","source":"@site/docs/02-contacting-api/06-keeping-connection-open.mdx","sourceDirName":"02-contacting-api","slug":"/contacting-api/keeping-connection-open","permalink":"/ctoa/contacting-api/keeping-connection-open","draft":false,"unlisted":false,"editUrl":"https://github.com/m-ahmadi/ctoa/blob/main/docs/02-contacting-api/06-keeping-connection-open.mdx","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{},"sidebar":"sidebar","previous":{"title":"Authentication","permalink":"/ctoa/contacting-api/authentication"},"next":{"title":"Dictionary of All Messages","permalink":"/ctoa/contacting-api/dictionary-of-all-messages"}}');var s=o(4848),r=o(8453),a=o(5537),c=o(9329);const i={},l="Keeping Connection Open",u={},d=[];function p(e){const n={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"keeping-connection-open",children:"Keeping Connection Open"})}),"\n",(0,s.jsxs)(n.p,{children:["As ",(0,s.jsx)(n.a,{href:"./establishing-connection",children:"mentioned earlier"}),", connection does not stay open\nforever, and in order to keep it open, we have to do some extra work."]}),"\n",(0,s.jsxs)(n.p,{children:["Let's adjust the code so that our program runs\n",(0,s.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Infinite_loop",children:"endlessly"}),". This way we have an\nopportunity to check program state at specific intervals like 5 second for\nexample."]}),"\n",(0,s.jsxs)(a.A,{children:[(0,s.jsx)(c.A,{value:"JavaScript",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const ws = new WebSocket('wss://live.ctraderapi.com:5036');\n\n// util functions\nconst sleep = (secs) => new Promise((r) => setTimeout(r, secs * 1000));\nconst round = (n, dp) => +n.toFixed(dp);\nconst fmt = (n) => round(n / 1000, 1);\n\nconst CHECK_INTERVAL_SECS = 5;\nlet timeWhenOpened = 0;\n\nws.onopen = function () {\n  timeWhenOpened = Date.now();\n  console.log('connected to server');\n};\n\nws.onclose = function () {\n  console.log('connection closed');\n};\n\n(async () => {\n  while (true) {\n    await sleep(0); // neccessary in \"async infinite loops\"\n    if (ws.readyState !== WebSocket.OPEN) continue;\n\n    const timeBeenOpen = Date.now() - timeWhenOpened;\n    console.log('connection is been open for', fmt(timeBeenOpen), 'seconds');\n\n    await sleep(CHECK_INTERVAL_SECS);\n  }\n})();\n"})})}),(0,s.jsx)(c.A,{value:"Python",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",children:"import asyncio as aio\nimport websockets\nfrom websockets.asyncio.client import connect\nfrom timeit import default_timer as timer\n\nCHECK_INTERVAL_SECS = 5\ntime_when_opened = 0\n\nasync def main():\n\n  async with connect('wss://live.ctraderapi.com:5036') as ws:\n    print('connected to server')\n    time_when_opened = timer()\n\n    while True:\n      await aio.sleep(0)\n\n      if ws.state != websockets.State.OPEN:\n        print('connection closed')\n        break\n\n      time_been_open = round(timer() - time_when_opened, 1)\n      print('connection is been open for', time_been_open, 'seconds')\n\n      await aio.sleep(CHECK_INTERVAL_SECS)\n\naio.run(main())\n"})})})]}),"\n",(0,s.jsx)(n.p,{children:"Results from running the code:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"connected to server\nconnection is been open for 0 seconds\nconnection is been open for 5 seconds\nconnection is been open for 10.1 seconds\nconnection is been open for 15.1 seconds\nconnection is been open for 20.1 seconds\nconnection is been open for 25.1 seconds\nconnection closed\n"})}),"\n",(0,s.jsxs)(n.p,{children:["As we learned\n",(0,s.jsx)(n.a,{href:"./establishing-connection#why-connection-closes-automatically",children:"here"})," , the\nconnection gets closed by the server after being idle for about 30 seconds."]}),"\n",(0,s.jsx)(n.p,{children:"Now that we have the ability to detect how long our connection has been open, we\ncan prevent the connection from being closed by repeatedly sending a special\nmessage to the server at intervals that are under 30 seconds. Let's add below\nparts to our previous code and run it again:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"let timeOfLastAction = 0;\n\nws.onopen = function () {\n  timeOfLastAction = Date.now();\n  // ...\n};\n\n(async () => {\n  while (true) {\n    // ...\n    const idleTime = fmt(Date.now() - timeOfLastAction);\n    if (idleTime >= 25) {\n      ws.send(JSON.stringify({ payloadType: 51 }));\n      timeOfLastAction = Date.now();\n      console.log('we just sent heartbeat');\n    }\n    // ...\n  }\n})();\n"})}),"\n",(0,s.jsx)(n.p,{children:"Results from running the code:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"connected to server\nconnection is been open for 0 seconds\nconnection is been open for 5 seconds\nconnection is been open for 10.1 seconds\nconnection is been open for 15.1 seconds\nconnection is been open for 20.1 seconds\njust sent heartbeat\nconnection is been open for 25.1 seconds\nconnection closed: { code: 1000, reason: 'Bye', wasClean: true }\n"})}),"\n",(0,s.jsx)(n.p,{children:"As you see from the results, connection did not stay open and it got closed by\nserver again after idle time reached around 30 seconds. So why our heartbeat\nsending didn't have any effects? It's because we did not authenticate first. You\ncan think about it this way, imagine you're the server, and every one that\nconnects to you consumes a little bit of your resources, so you let anyone\nconnect for 30 seconds and you don't say anything because you're a nice server,\nbut if clients want to stay for longer than 30 seconds, they have to show some\nID, so at least server knows it's not wasting its resources on a stranger."}),"\n",(0,s.jsx)(n.p,{children:"So let's add the showing our ID part to our previous code and run it again:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const { clientId, clientSecret } = require('./credentials.json');\n\nws.onopen = function () {\n  // ...\n  ws.send(\n    JSON.stringify({ payloadType: 2100, payload: { clientId, clientSecret } }),\n  );\n};\n"})}),"\n",(0,s.jsx)(n.p,{children:"Results from running the code:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'connected to server\nconnection is been open for 0 seconds\nserver sent: {"payloadType":2101}\nconnection is been open for 5 seconds\nconnection is been open for 10.1 seconds\nconnection is been open for 15.1 seconds\nconnection is been open for 20.1 seconds\nwe just sent heartbeat\nconnection is been open for 25.1 seconds\nserver sent: {"payloadType":51}\nconnection is been open for 30.2 seconds\nconnection is been open for 35.2 seconds\nconnection is been open for 40.2 seconds\nwe just sent heartbeat\nconnection is been open for 45.3 seconds\nconnection is been open for 50.3 seconds\nconnection is been open for 55.3 seconds\nserver sent: {"payloadType":51}\nconnection is been open for 60.4 seconds\nwe just sent heartbeat\nconnection is been open for 65.4 seconds\nconnection is been open for 70.4 seconds\n'})}),"\n",(0,s.jsx)(n.p,{children:"As you see from the results, we succeeded in keeping the connection open for\nlonger than 30 seconds. You might have also noticed that not only we're sending\nthe heartbeat, but the server is also sending us a heartbeat."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},5537:(e,n,o)=>{o.d(n,{A:()=>j});var t=o(6540),s=o(4164),r=o(5627),a=o(6347),c=o(372),i=o(604),l=o(1861),u=o(8749);function d(e){return t.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p(e){const{values:n,children:o}=e;return(0,t.useMemo)(()=>{const e=n??function(e){return d(e).map(({props:{value:e,label:n,attributes:o,default:t}})=>({value:e,label:n,attributes:o,default:t}))}(o);return function(e){const n=(0,l.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,o])}function h({value:e,tabValues:n}){return n.some(n=>n.value===e)}function f({queryString:e=!1,groupId:n}){const o=(0,a.W6)(),s=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,i.aZ)(s),(0,t.useCallback)(e=>{if(!s)return;const n=new URLSearchParams(o.location.search);n.set(s,e),o.replace({...o.location,search:n.toString()})},[s,o])]}function b(e){const{defaultValue:n,queryString:o=!1,groupId:s}=e,r=p(e),[a,i]=(0,t.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!h({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const o=n.find(e=>e.default)??n[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:n,tabValues:r})),[l,d]=f({queryString:o,groupId:s}),[b,m]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[o,s]=(0,u.Dv)(n);return[o,(0,t.useCallback)(e=>{n&&s.set(e)},[n,s])]}({groupId:s}),g=(()=>{const e=l??b;return h({value:e,tabValues:r})?e:null})();(0,c.A)(()=>{g&&i(g)},[g]);return{selectedValue:a,selectValue:(0,t.useCallback)(e=>{if(!h({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);i(e),d(e),m(e)},[d,m,r]),tabValues:r}}var m=o(9136);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var w=o(4848);function y({className:e,block:n,selectedValue:o,selectValue:t,tabValues:a}){const c=[],{blockElementScrollPositionUntilNextRender:i}=(0,r.a_)(),l=e=>{const n=e.currentTarget,s=c.indexOf(n),r=a[s].value;r!==o&&(i(n),t(r))},u=e=>{let n=null;switch(e.key){case"Enter":l(e);break;case"ArrowRight":{const o=c.indexOf(e.currentTarget)+1;n=c[o]??c[0];break}case"ArrowLeft":{const o=c.indexOf(e.currentTarget)-1;n=c[o]??c[c.length-1];break}}n?.focus()};return(0,w.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},e),children:a.map(({value:e,label:n,attributes:t})=>(0,w.jsx)("li",{role:"tab",tabIndex:o===e?0:-1,"aria-selected":o===e,ref:e=>{c.push(e)},onKeyDown:u,onClick:l,...t,className:(0,s.A)("tabs__item",g.tabItem,t?.className,{"tabs__item--active":o===e}),children:n??e},e))})}function v({lazy:e,children:n,selectedValue:o}){const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=r.find(e=>e.props.value===o);return e?(0,t.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,w.jsx)("div",{className:"margin-top--md",children:r.map((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==o}))})}function x(e){const n=b(e);return(0,w.jsxs)("div",{className:(0,s.A)("tabs-container",g.tabList),children:[(0,w.jsx)(y,{...n,...e}),(0,w.jsx)(v,{...n,...e})]})}function j(e){const n=(0,m.A)();return(0,w.jsx)(x,{...e,children:d(e.children)},String(n))}},8453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>c});var t=o(6540);const s={},r=t.createContext(s);function a(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(r.Provider,{value:n},e.children)}},9329:(e,n,o)=>{o.d(n,{A:()=>a});o(6540);var t=o(4164);const s={tabItem:"tabItem_Ymn6"};var r=o(4848);function a({children:e,hidden:n,className:o}){return(0,r.jsx)("div",{role:"tabpanel",className:(0,t.A)(s.tabItem,o),hidden:n,children:e})}}}]);