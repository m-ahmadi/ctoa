"use strict";(self.webpackChunkctrader_openapi_docs=self.webpackChunkctrader_openapi_docs||[]).push([[831],{7486:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"Basic websocket example in JavaScript","title":"Basic websocket example in JavaScript","description":"Here\'s a little snippet to play with","source":"@site/docs/10-Basic websocket example in JavaScript.mdx","sourceDirName":".","slug":"/Basic websocket example in JavaScript","permalink":"/ctoa/Basic websocket example in JavaScript","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":10,"frontMatter":{},"sidebar":"sidebar","previous":{"title":"Python example of how to download ticks data","permalink":"/ctoa/Python example of how to download ticks data"},"next":{"title":"How to place order with relative sl,tp","permalink":"/ctoa/How to place order with relative sl,tp"}}');var s=o(4848),r=o(8453);const a={},c=void 0,i={},l=[];function d(e){const n={a:"a",br:"br",code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["Here's a little snippet to play with\r\n",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/WebSocket",children:"WebSocket"}),".",(0,s.jsx)(n.br,{}),"\n","It's called an echo server, meaning, whatever you send to it",(0,s.jsx)(n.br,{}),"\n","it will send that exact thing back to you."]}),"\n",(0,s.jsxs)(n.p,{children:["If you run below snippet (or paste it in the console of your browser),",(0,s.jsx)(n.br,{}),"\n","you will see a log like:",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.code,{children:"server sent you a message: hello"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"var ws = new WebSocket('wss://echo.websocket.org');\r\n\r\nws.onopen = function (e) {\r\n  console.log('connected to server');\r\n};\r\nws.onmessage = function (e) {\r\n  console.log('server sent you a message:', e.data);\r\n};\r\nws.onerror = function (e) {\r\n  console.log('connection encountered an error');\r\n};\r\nws.onclose = function (e) {\r\n  console.log('connection closed', e.code, e.reason, e.wasClean);\r\n};\r\n\r\nws.send('hello');\n"})}),"\n",(0,s.jsx)(n.p,{children:"Now for example send another thing to server like"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"ws.send('hi');\n"})}),"\n",(0,s.jsxs)(n.p,{children:["and you will see another log like",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.code,{children:"server sent you a message: hi"})]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>c});var t=o(6540);const s={},r=t.createContext(s);function a(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);